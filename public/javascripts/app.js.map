{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingshvOA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBA;AAAA","file":"public/javascripts/app.js","sourcesContent":[" // Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Blue', length: '4:26' },\n       { name: 'Green', length: '3:14' },\n       { name: 'Red', length: '5:01' },\n       { name: 'Pink', length: '3:21'},\n       { name: 'Magenta', length: '2:15'}\n     ]\n };\n \n // Another Example Album\n var albumMarconi = {\n   name: 'The Telephone',\n   artist: 'Guglielmo Marconi',\n   label: 'EM',\n   year: '1909',\n   albumArtUrl: '/images/album-placeholder.png',\n   songs: [\n       { name: 'Hello, Operator?', length: '1:01' },\n       { name: 'Ring, ring, ring', length: '5:01' },\n       { name: 'Fits in your pocket', length: '3:21'},\n       { name: 'Can you hear me now?', length: '3:14' },\n       { name: 'Wrong phone number', length: '2:15'}\n     ]\n };\n\n var currentlyPlayingSong = null;\n\n var createSongRow = function(songNumber, songName, songLength) {\n   var template =\n       '<tr>'\n     + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n     + '  <td class=\"col-md-9\">' + songName + '</td>'\n     + '  <td class=\"col-md-2\">' + songLength + '</td>'\n     + '</tr>'\n     ;\n \n   // Instead of returning the row immediately, we'll attach hover\n  // functionality to it first.\n   var $row = $(template);\n \n   var onHover = function(event) {\n    var songNumberCell = $(this).find('.song-number');\n    var songNumber = songNumberCell.data('song-number');\n    if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n    }\n   };\n \n   var offHover = function(event) {\n     var songNumberCell = $(this).find('.song-number');\n     var songNumber = songNumberCell.data('song-number');\n     if (songNumber !== currentlyPlayingSong) {\n      songNumberCell.html(songNumber);\n    }\n   };\n   \n       // Toggle the play, pause, and song number based on the button clicked.\n   var clickHandler = function(event) {\n     var songNumber = $(this).data('song-number');\n \n    if (currentlyPlayingSong !== null) {\n       // Revert to song number for currently playing song because user started playing new song.\n       var currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n       currentlyPlayingCell.html(currentlyPlayingSong);\n     }\n \n     if (currentlyPlayingSong !== songNumber) {\n       // Switch from Play -> Pause button to indicate new song is playing.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n       currentlyPlayingSong = songNumber;\n     }\n     else if (currentlyPlayingSong === songNumber) {\n       // Switch from Pause -> Play button to pause currently playing song.\n       $(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n       currentlyPlayingSong = null;\n     }\n   };\n   \n   \n   $row.find('.song-number').click(clickHandler);\n   $row.hover(onHover, offHover);\n   return $row;\n\n };\n\n var changeAlbumView = function(album) {\n   // Update the album title\n   var $albumTitle = $('.album-title');\n   $albumTitle.text(album.name);\n   \n   // Update the album artist\n   var $albumArtist = $('.album-artist');\n   $albumArtist.text(album.artist);\n \n   // Update the meta information\n   var $albumMeta = $('.album-meta-info');\n   $albumMeta.text(album.year + \" on \" + album.label);\n \n   // Update the album image\n   var $albumImage = $('.album-image img');\n   $albumImage.attr('src', album.albumArtUrl);\n \n   // Update the Song List\n   var $songList = $(\".album-song-listing\");\n   $songList.empty();\n   var songs = album.songs;\n   for (var i = 0; i < songs.length; i++) {\n     var songData = songs[i];\n     var $newRow = createSongRow(i + 1, songData.name, songData.length);\n     $songList.append($newRow);\n   }\n \n };\n\n // below the changeAlbumView function\n\n   var updateSeekPercentage = function($seekBar, event) {\n   var barWidth = $seekBar.width();\n   var offsetX = event.pageX - $seekBar.offset().left;\n \n   var offsetXPercent = (offsetX  / barWidth) * 100;\n   offsetXPercent = Math.max(0, offsetXPercent);\n   offsetXPercent = Math.min(100, offsetXPercent);\n \n   var percentageString = offsetXPercent + '%';\n   $seekBar.find('.fill').width(percentageString);\n   $seekBar.find('.thumb').css({left: percentageString});\n };  \n   \n   var setupSeekBars = function() {\n \n   $seekBars = $('.player-bar .seek-bar');\n   $seekBars.click(function(event) {\n     updateSeekPercentage($(this), event);\n   });\n    \n   $seekBars.find('.thumb').mousedown(function(event){\n     var $seekBar = $(this).parent();\n     \n     $seekBar.addClass('no-animate');\n \n    $(document).bind('mousemove.thumb', function(event){\n      updateSeekPercentage($seekBar, event);\n    });\n \n    //cleanup\n    $(document).bind('mouseup.thumb', function(){\n      $seekBar.removeClass('no-animate');\n      \n      $(document).unbind('mousemove.thumb');\n      $(document).unbind('mouseup.thumb');\n    });\n \n  });\n    \n \n };\n \n \n\n//This 'if' condition is used to prevent the jQuery modifications\n    //from happening on non-Album view pages.\n    //- Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n   // Wait until the HTML is fully processed.\n$(document).ready(function() {\n  changeAlbumView(albumPicasso);\n  setupSeekBars();\n   });\n }","//require('./landing');\n//require('./album');\n//require('./collection');\n//require('./profile');\n // Example Album\n var albumPicasso = {\n   name: 'The Colors',\n   artist: 'Pablo Picasso',\n   label: 'Cubism',\n   year: '1881',\n   albumArtUrl: '/images/album-placeholder.png',\n \n   songs: [\n       { name: 'Blue', length: '4:26', audioUrl: '/music/placeholders/blue' },\n       { name: 'Green', length: '3:14', audioUrl: '/music/placeholders/green' },\n       { name: 'Red', length: '5:01', audioUrl: '/music/placeholders/red' },\n       { name: 'Pink', length: '3:21', audioUrl: '/music/placeholders/pink' },\n       { name: 'Magenta', length: '2:15', audioUrl: '/music/placeholders/magenta' }\n     ]\n };\n\n blocJams = angular.module('BlocJams', ['ui.router']);\n  blocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n   $locationProvider.html5Mode(true);\n \n   $stateProvider.state('landing', {\n     url: '/',\n     controller: 'Landing.controller',\n     templateUrl: '/templates/landing.html'\n   });\n\n\n   $stateProvider.state('collection', {\n    url: '/collection',\n    controller: 'Collection.controller',\n    templateUrl: '/templates/collection.html'\n   }); \n    \n   $stateProvider.state('album', {\n     url: '/album',\n     templateUrl: '/templates/album.html',\n     controller: 'Album.controller'\n   });\n    \n }]); \n\n// This is a cleaner way to call the controller than crowding it on the module definition.\n blocJams.controller('Landing.controller', ['$scope', function($scope) {\n  $scope.subText = \"Turn the music Up!\";\n  \n  $scope.subTextClicked = function() {\n    $scope.subText += '!';\n   };\n   \n   $scope.albumURLs = [\n    '/images/album-placeholders/album-1.jpg',\n    '/images/album-placeholders/album-2.jpg',\n    '/images/album-placeholders/album-3.jpg',\n    '/images/album-placeholders/album-4.jpg',\n    '/images/album-placeholders/album-5.jpg',\n    '/images/album-placeholders/album-6.jpg',\n    '/images/album-placeholders/album-7.jpg',\n    '/images/album-placeholders/album-8.jpg',\n    '/images/album-placeholders/album-9.jpg'\n   ];\n}]);   \n  blocJams.controller('Collection.controller', ['$scope','SongPlayer', function($scope, SongPlayer) {\n    $scope.albums = [];\n   for (var i = 0; i < 33; i++) {\n    $scope.albums.push(angular.copy(albumPicasso));\n   }\n   $scope.playAlbum = function(album){\n     SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n   }     \n}]);\n\n// Everything else above\n\n  blocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n   $scope.album = angular.copy(albumPicasso);\n   \n   var hoveredSong = null;\n   \n \n   $scope.onHoverSong = function(song) {\n     hoveredSong = song;\n   };\n \n   $scope.offHoverSong = function(song) {\n     hoveredSong = null;\n   };\n   $scope.getSongState = function(song) {\n     if (song === SongPlayer.currentSong && SongPlayer.playing) {\n       return 'playing';\n     }\n     else if (song === hoveredSong) {\n       return 'hovered';\n     }\n     return 'default';\n   };\n   \n   $scope.playSong = function(song) {\n     SongPlayer.setSong($scope.album, song);\n     SongPlayer.play();\n    };\n \n   $scope.pauseSong = function(song) {\n     SongPlayer.pause();\n    };\n   \n }]);\n\n\n\n blocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n   $scope.songPlayer = SongPlayer;\n }]);\n\n blocJams.service('SongPlayer', function() {\n     var currentSoundFile = null;\n     var trackIndex = function(album, song) {\n     return album.songs.indexOf(song);\n   };\n   \n   return {\n     currentSong: null,\n     currentAlbum: null,\n     playing: false,\n \n     play: function() {\n       this.playing = true;\n       currentSoundFile.play();\n     },\n     pause: function() {\n       this.playing = false;\n       currentSoundFile.pause();\n     },\n      next: function() {\n       var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n       currentTrackIndex++;\n       if (currentTrackIndex >= this.currentAlbum.songs.length) {\n         currentTrackIndex = 0;\n       }\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n        \n        \n       this.currentSong = this.currentAlbum.songs[currentTrackIndex];\n     },\n      previous: function() {\n       var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n       currentTrackIndex--;\n       if (currentTrackIndex < 0) {\n         currentTrackIndex = this.currentAlbum.songs.length - 1;\n       }\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n        \n \n       this.currentSong = this.currentAlbum.songs[currentTrackIndex];\n     },\n     \n     \n     setSong: function(album, song) {\n        if (currentSoundFile) {\n      currentSoundFile.stop();\n    }\n       this.currentAlbum = album;\n       this.currentSong = song;\n          currentSoundFile = new buzz.sound(song.audioUrl, {\n      formats: [ \"mp3\" ],\n      preload: true\n    });\n \n    this.play();   \n     }\n   };\n });\n\n blocJams.directive('slider', function(){\n   \n    var updateSeekPercentage = function($seekBar, event) {\n     var barWidth = $seekBar.width();\n     var offsetX =  event.pageX - $seekBar.offset().left;\n \n     var offsetXPercent = (offsetX  / $seekBar.width()) * 100;\n     offsetXPercent = Math.max(0, offsetXPercent);\n     offsetXPercent = Math.min(100, offsetXPercent);\n \n     var percentageString = offsetXPercent + '%';\n     $seekBar.find('.fill').width(percentageString);\n     $seekBar.find('.thumb').css({left: percentageString});\n   }\n   \n   return {\n     templateUrl: '/templates/directives/slider.html', // We'll create these files shortly.\n     replace: true,\n     restrict: 'E',\n     \n         link: function(scope, element, attributes) {\n      \n      var $seekBar = $(element);\n \n      $seekBar.click(function(event) {\n        updateSeekPercentage($seekBar, event);\n      });\n \n      $seekBar.find('.thumb').mousedown(function(event){\n        $seekBar.addClass('no-animate');\n \n        $(document).bind('mousemove.thumb', function(event){\n          updateSeekPercentage($seekBar, event);\n        });\n \n        //cleanup\n        $(document).bind('mouseup.thumb', function(){\n          $seekBar.removeClass('no-animate');\n          $(document).unbind('mousemove.thumb');\n          $(document).unbind('mouseup.thumb');\n        });\n \n      });\n    }\n     \n     \n     \n   };\n });\n     \n\n\n"," var buildAlbumThumbnail = function() {\n    var template =\n        '<div class=\"collection-album-container col-md-2\">'\n        + '  <div class=\"collection-album-image-container\">'\n   + '    <img src=\"/images/album-placeholder.png\"/>'\n   + '  </div>'\n      + '  <div class=\"caption album-collection-info\">'\n      + '    <p>'\n      + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n      + '      <br/>'\n      + '      <a href=\"/album.html\"> Artist name </a>'\n      + '      <br/>'\n      + '      X songs'\n      + '      <br/>'\n      + '    </p>'\n      + '  </div>'\n      + '</div>';\n \n   return $(template);\n };\n\n var buildAlbumOverlay = function(albumURL) {\n    var template =\n        '<div class=\"collection-album-image-overlay\">'\n      + '  <div class=\"collection-overlay-content\">'\n      + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n      + '      <i class=\"fa fa-play\"></i>'\n      + '    </a>'\n      + '    &nbsp;'\n      + '    <a class=\"collection-overlay-button\">'\n      + '      <i class=\"fa fa-plus\"></i>'\n      + '    </a>'\n      + '  </div>'\n      + '</div>'\n      ;\n    return $(template);\n  };\n\nvar updateCollectionView = function() {\n   var $collection = $(\".collection-container .row\");\n   $collection.empty();\n \nfor (var i = 0; i < 33; i++) {\n     var $newThumbnail = buildAlbumThumbnail();\n    $collection.append($newThumbnail);\n   }\nvar onHover = function(event) {\n  $(this).append(buildAlbumOverlay(\"/album.html\"));\n  };\n  \nvar offHover = function(event) {\n  $(this).find('.collection-album-image-overlay').remove();\n  };\n  \n$collection.find('.collection-album-image-container').hover(onHover, offHover);\n };\n \n \nif (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n   $(document).ready(function() {\n   \n     updateCollectionView();\n   });\n}\n   ","$(document).ready(function() {\n  $('.hero-content h3').click(function() {\n    subtext = $(this).text();\n    $(this).text(subtext + \"!\");\n  });\n    var onHoverAction = function(event) {\n     console.log('Hover action triggered.');\n     $(this).animate({'margin-top': '10px'});\n   };\n \n   var offHoverAction = function(event) {\n     console.log('Off-hover action triggered.');\n     $(this).animate({'margin-top': '0px'});\n   };\n \n   $('.selling-points .point').hover(onHoverAction, offHoverAction);\n});"," // holds the name of our tab button container for selection later in the function\n var tabsContainer = \".user-profile-tabs-container\"\n var selectTabHandler = function(event) {\n   $tab = $(this);\n   $(tabsContainer + \" li\").removeClass('active');\n   $tab.parent().addClass('active');\n   selectedTabName = $tab.attr('href');\n   console.log(selectedTabName);\n   $(\".tab-pane\").addClass('hidden');\n   $(selectedTabName).removeClass('hidden');\n   event.preventDefault();\n };\n \nif (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }\n \n"]}